@inject MudBlazor.IDialogService DialogService
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3" /> Add New Employee
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form" Model="_addUserDto" ValidationDelay="0" Class="d-flex flex-column gap-4">
            <div class="d-flex flex-row gap-4">
                <MudTextField @bind-Value="_addUserDto.FirstName"
                              Label="First Name"
                              Variant="Variant.Outlined"
                              Required="true"
                              RequiredError="First Name is required" />
                <MudTextField @bind-Value="_addUserDto.MiddleName"
                              Label="Middle Name"
                              Variant="Variant.Outlined" />
                <MudTextField @bind-Value="_addUserDto.LastName"
                              Label="Last Name"
                              Variant="Variant.Outlined"
                              Required="true"
                              RequiredError="Last Name is required" />
            </div>
            <div class="d-flex flex-row gap-4">
                <MudSelect @bind-Value="_addUserDto.Suffix"
                          T="string"
                            Label="Suffix"
                           Variant="Variant.Outlined"
                           AnchorOrigin="Origin.BottomCenter"
                           Style="min-width: 100px;">
                    <MudSelectItem T="string" Value="@(null)">None</MudSelectItem>
                    <MudSelectItem Value="@("Jr.")">Jr.</MudSelectItem>
                    <MudSelectItem Value="@("Sr.")">Sr.</MudSelectItem>
                    <MudSelectItem Value="@("II")">II</MudSelectItem>
                    <MudSelectItem Value="@("III")">III</MudSelectItem>
                </MudSelect>
                <MudSelect @bind-Value="_addUserDto.Gender"
                            T="string"           
                            Label="Gender"
                           Variant="Variant.Outlined"
                           Required="true"
                           RequiredError="Gender is required"
                           AnchorOrigin="Origin.BottomCenter"
                           Style="min-width: 100px;">
                    <MudSelectItem Value="@("Male")">Male</MudSelectItem>
                    <MudSelectItem Value="@("Female")">Female</MudSelectItem>
                    <MudSelectItem Value="@("Other")">Other</MudSelectItem>
                </MudSelect>
                <MudSelect @bind-Value="_addUserDto.Role"
                           T="string" Label="Role"
                           Variant="Variant.Outlined"
                           Required="true"
                           RequiredError="Role is required"
                           AnchorOrigin="Origin.BottomCenter"
                           Style="min-width: 150px;">
                    <MudSelectItem Value="@("SuperAdmin")">SuperAdmin</MudSelectItem>
                    <MudSelectItem Value="@("Kapitan")">Kapitan</MudSelectItem>
                    <MudSelectItem Value="@("Kagawad")">Kagawad</MudSelectItem>
                    <MudSelectItem Value="@("Secretary")">Secretary</MudSelectItem>
                    <MudSelectItem Value="@("Treasurer")">Treasurer</MudSelectItem>
                    <MudSelectItem Value="@("Encoder")">Encoder</MudSelectItem>
                </MudSelect>
            </div>
            <MudTextField @bind-Value="_addUserDto.Username"
                          Label="Username"
                          Variant="Variant.Outlined"
                          Required="true"
                          RequiredError="Username is required" />
            <MudTextField @bind-Value="_addUserDto.Email"
                          Label="Email"
                          Variant="Variant.Outlined"
                          InputType="InputType.Email"
                          Required="true"
                          RequiredError="Email is required" />
            <MudTextField @bind-Value="_addUserDto.Password"
                          Label="Password"
                          Variant="Variant.Outlined"
                          InputType="InputType.Password"
                          Required="true"
                          RequiredError="Password is required" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Text" Style="color: #6c757d;">Cancel</MudButton>
        <MudButton OnClick="Submit" Variant="Variant.Filled" Style="background-color: #3989CA; color: #fff;" Disabled="@(!_form.IsValid)">Add User</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; }

    private MudForm _form = new();
    private AddUserDto _addUserDto = new();

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Submit()
    {
        Console.WriteLine("Submit button clicked");
        Snackbar.Add("Submit button clicked", Severity.Info);

        if (_form != null)
        {
            await _form.Validate();
            Console.WriteLine($"Form IsValid: {_form.IsValid}");

            if (_form.IsValid)
            {
                Console.WriteLine($"Submitting user: {_addUserDto.FirstName} {_addUserDto.LastName}");
                Snackbar.Add($"Submitting user: {_addUserDto.FirstName} {_addUserDto.LastName}", Severity.Info);
                MudDialog.Close(DialogResult.Ok(_addUserDto));
            }
            else
            {
                Console.WriteLine("Form validation failed");
                Snackbar.Add("Please fill in all required fields correctly.", Severity.Warning);
            }
        }
        else
        {
            Console.WriteLine("Form is null");
            Snackbar.Add("Form not initialized properly.", Severity.Error);
        }
    }

    public enum Suffix { None, Jr, Sr, I, II, III, IV }
    public enum Gender { Male, Female, Other }
    public enum Role { SuperAdmin, Kapitan, Kagawad, Secretary, Treasurer, Encoder }
}